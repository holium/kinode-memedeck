"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[5219],{15219:function(e,t,n){n.d(t,{A6:function(){return $},BE:function(){return ev},CZ:function(){return s},FK:function(){return v},GJ:function(){return M},IM:function(){return eg},JF:function(){return ew},Jp:function(){return I},KV:function(){return Q},Mf:function(){return O},My:function(){return ea},N3:function(){return ek},NU:function(){return X},Qr:function(){return ec},Rp:function(){return V},S2:function(){return q},TJ:function(){return er},Ug:function(){return G},V4:function(){return eh},X:function(){return W},X2:function(){return J},X5:function(){return L},X_:function(){return ee},_y:function(){return d},e5:function(){return ed},ey:function(){return A},ez:function(){return H},fg:function(){return k},ft:function(){return D},gF:function(){return b},gJ:function(){return Z},hE:function(){return ep},iS:function(){return l},iq:function(){return m},jn:function(){return B},k8:function(){return es},lC:function(){return K},lR:function(){return E},lm:function(){return el},m4:function(){return et},ns:function(){return eo},ny:function(){return w},oX:function(){return en},qr:function(){return eu},rB:function(){return ei},rj:function(){return S},sb:function(){return p},t$:function(){return R},uG:function(){return F},ug:function(){return _},vK:function(){return c},vq:function(){return ef},ws:function(){return U},xY:function(){return T},yD:function(){return j},yo:function(){return em},zI:function(){return x},zk:function(){return Y}});var r=n(16219),u=n(22640),a=n(72363),o=n(71987),i=n(25845);let c=(0,r.LC)({reducerPath:"cachedApi",tagTypes:["Profile","Meme","Post","Deck","Contest"],baseQuery:(0,u.ni)({baseUrl:"".concat((0,o.bR)(),"/v2"),credentials:"include"}),endpoints:e=>({logout:e.mutation({query:()=>"/auth/logout"}),getMe:e.query({query:()=>({url:"/profile/me?include_decks=true&include_studio_config=true",priority:"high"})}),refreshProfile:e.query({query:e=>({url:"/profile/update_twitter/".concat(e),method:"POST"})}),getProfile:e.query({query:e=>"/profile/".concat(e)}),getMyProfileMemes:e.query({query:e=>{let{start:t,limit:n,sources:r}=e,u=new URLSearchParams;return t&&u.append("start",t.toString()),n&&u.append("limit",n.toString()),r&&u.append("source",r.join(",")),{url:"/profile/me/memes?".concat(u)}},merge:(e,t,n)=>{var r;let{arg:u}=n;return u.pushToTop?[...t,...null!=e?e:[]]:null!==(r=u.start)&&void 0!==r&&r?[...null!=e?e:[],...null!=t?t:[]]:t},serializeQueryArgs:e=>{let{queryArgs:t}=e,{start:n,limit:r,pushToTop:u,...a}=t;return a},forceRefetch(e){let{currentArg:t,previousArg:n}=e;return(null==t?void 0:t.start)!==(null==n?void 0:n.start)||(null==t?void 0:t.limit)!==(null==n?void 0:n.limit)}}),getProfileMemes:e.query({query:e=>{let{start:t,limit:n,handle:r}=e,u=new URLSearchParams;return u.append("start",t.toString()),u.append("limit",n.toString()),{url:"/profile/".concat(r,"/memes?").concat(u)}}}),getLibraryMemes:e.query({query:e=>{let{start:t,limit:n,search:r,sources:u}=e,a=new URLSearchParams;return t&&a.append("start",t.toString()),n&&a.append("limit",n.toString()),r&&a.append("search",r),u&&u.length>0&&a.append("source",u.join(",")),{url:"/profile/me/images?".concat(a)}},merge:(e,t,n)=>{var r;let{arg:u}=n;return u.pushToTop?[...t,...null!=e?e:[]]:null!==(r=u.start)&&void 0!==r&&r?[...e||[],...t]:t},serializeQueryArgs:e=>{let{queryArgs:t}=e,{start:n,limit:r,pushToTop:u,...a}=t;return a},forceRefetch(e){let{currentArg:t,previousArg:n}=e;return(null==t?void 0:t.start)!==(null==n?void 0:n.start)||(null==t?void 0:t.limit)!==(null==n?void 0:n.limit)||(null==t?void 0:t.search)!==(null==n?void 0:n.search)||(null==t?void 0:t.sources)!==(null==n?void 0:n.sources)}}),searchUser:e.query({query:e=>{let{start:t,limit:n,search:r}=e,u=new URLSearchParams;return t&&u.append("start",t.toString()),n&&u.append("limit",n.toString()),r&&u.append("search",r),"/profile?".concat(u)}}),getTopPosters:e.query({query:e=>{let{interval:t,limit:n}=e,r=new URLSearchParams;return t&&r.append("interval",t),n&&r.append("limit",n.toString()),"/profile/top-posters?".concat(r)}}),getProductUpdates:e.query({query:()=>"/profile/product_updates"}),dismissProductUpdate:e.mutation({query:e=>({url:"/profile/product_updates",method:"DELETE",body:{product_update_id:e}}),async onQueryStarted(e,t){let{dispatch:n,queryFulfilled:r}=t,u=n(c.util.updateQueryData("getProductUpdates",void 0,e=>{Object.assign(e,{})}));try{await r}catch(e){u.undo()}}}),postImage:e.mutation({query:e=>({url:"/images",method:"POST",body:e}),async onCacheEntryAdded(e,t){let{dispatch:n,cacheDataLoaded:r,getState:u}=t,{data:a}=await r;if(!a)return;let o=["generated","faceswap"];"uploaded"===a.source&&(o=["uploaded"]),n(c.util.upsertQueryData("getLibraryMemes",{start:0,limit:50,search:"",sources:o,pushToTop:!0},[a]))}}),getImage:e.query({query:e=>"/images/".concat((0,i.eC)(e))}),deleteImage:e.mutation({query:e=>({url:"/images/".concat((0,i.eC)(e)),method:"DELETE"}),async onCacheEntryAdded(e,t){let{dispatch:n,cacheDataLoaded:r}=t,{data:u}=await r;u&&[["uploaded"],["generated","faceswap"]].forEach(e=>{n(c.util.updateQueryData("getLibraryMemes",{start:0,limit:50,sources:e,search:""},e=>{let t=e.findIndex(e=>e.id===u.id);-1!==t&&e.splice(t,1)}))})}}),getMeme:e.query({query:e=>"/memes/".concat((0,i.eC)(e))}),postMeme:e.mutation({query:e=>({url:"/memes",method:"POST",body:e}),async onCacheEntryAdded(e,t){let{dispatch:n,cacheDataLoaded:r}=t,{data:u}=await r;u&&n(c.util.upsertQueryData("getMyProfileMemes",{start:0,limit:20,sources:["generated"],pushToTop:!0},[u]))}}),updateMeme:e.mutation({query:e=>{let{meme_id:t,...n}=e;return{url:"/memes/".concat((0,i.eC)(t)),method:"PUT",body:n}},async onQueryStarted(e,t){let{meme_id:n,...r}=e,{dispatch:u,queryFulfilled:a}=t,o=c.util.updateQueryData("getMeme",n,e=>{e&&Object.assign(e,r)}),i=c.util.updateQueryData("getMyProfileMemes",{start:0,limit:20,sources:["generated"]},e=>{var t;let u=e.findIndex(e=>e.id===n);-1!==u&&Object.assign(e[u],{...e[u],panel_layout:null!==(t=r.panel_layout)&&void 0!==t?t:e[u].panel_layout})}),d=u(o),l=u(i);try{await a}catch(e){d.undo(),l.undo()}},async onCacheEntryAdded(e,t){let{meme_id:n}=e,{dispatch:r,cacheDataLoaded:u}=t,{data:a}=await u;a&&r(c.util.updateQueryData("getMyProfileMemes",{start:0,limit:20,sources:["generated"]},e=>{let t=e.findIndex(e=>e.id===n);-1!==t&&Object.assign(e[t],a)}))}}),deleteMeme:e.mutation({query:e=>({url:"/memes/".concat((0,i.eC)(e)),method:"DELETE"}),async onCacheEntryAdded(e,t){let{dispatch:n,cacheDataLoaded:r}=t,{data:u}=await r;u&&n(c.util.updateQueryData("getMyProfileMemes",{start:0,limit:20,sources:["generated"]},t=>{let n=t.findIndex(t=>t.id===e);-1!==n&&t.splice(n,1)}))}}),postMemePanel:e.mutation({query:e=>{let{meme_id:t,...n}=e;return{url:"/memes/".concat((0,i.eC)(t),"/panel"),method:"POST",body:n}}}),publishMeme:e.mutation({query:e=>{let{meme_id:t,...n}=e;return{url:"/memes/".concat((0,i.eC)(t),"/publish"),method:"POST",body:n}},async onCacheEntryAdded(e,t){let{dispatch:n,cacheDataLoaded:r}=t,{data:u}=await r;if(!u)return;let a={...u,is_creator:!0};n(c.util.updateQueryData("getMyProfileMemes",{start:0,limit:20,sources:["generated"]},e=>{var t;let n=null===(t=u.meme)||void 0===t?void 0:t.id;if(!n)return;let r=e.findIndex(e=>e.id===n);-1!==r&&(e[r]={...e[r],posts:[u.id]})})),n(c.util.updateQueryData("getPosts",{deck_id:"feed"},e=>e?[a,...e]:[a])),n(c.util.updateQueryData("getDecksNewPosts",void 0,e=>{u.appears_in.map(e=>e.id).forEach(t=>{let n=e[t];n&&(e[t]=n+1)})}))}}),updateMemePanel:e.mutation({query:e=>{let{meme_id:t,panel_id:n,...r}=e;return{url:"/memes/".concat((0,i.eC)(t),"/panel/").concat(n),method:"PUT",body:r}}}),postMemeTextOverlay:e.mutation({query:e=>{let{meme_id:t,panel_idx:n,...r}=e;return{url:"/memes/".concat((0,i.eC)(t),"/panel/").concat(n.toString(),"/text_overlay"),method:"PUT",body:r}}}),faceswapUpload:e.mutation({query:e=>{let{meme_id:t,panel_id:n,...r}=e;return{url:"/memes/".concat((0,i.eC)(t),"/panel/").concat(n,"/faceswap-upload"),method:"POST",body:r}}}),faceswapDelete:e.mutation({query:e=>{let{meme_id:t,panel_id:n,...r}=e;return{url:"/memes/".concat((0,i.eC)(t),"/panel/").concat(n,"/faceswap-upload"),method:"DELETE",body:r}}}),getPosts:e.query({query:e=>{let{start:t,from:n,to:r,limit:u,deck_id:a="feed"}=e,o=new URLSearchParams;return t&&o.append("start",t.toString()),n&&o.append("from",n),r&&o.append("to",r),u&&o.append("limit",u.toString()),a&&o.append("deck_id",a),{url:"/posts?".concat(o)}},merge:(e,t,n)=>{var r;let{arg:u}=n;return u.from?e:null!==(r=u.start)&&void 0!==r&&r||u.from?[...null!=e?e:[],...null!=t?t:[]]:t},serializeQueryArgs:e=>{let{queryArgs:t}=e,{start:n,limit:r,...u}=t;return u},forceRefetch(e){let{currentArg:t,previousArg:n}=e;return(null==t?void 0:t.start)!==(null==n?void 0:n.start)||(null==t?void 0:t.from)!==(null==n?void 0:n.from)||(null==t?void 0:t.to)!==(null==n?void 0:n.to)||(null==t?void 0:t.limit)!==(null==n?void 0:n.limit)||(null==t?void 0:t.sort_by)!==(null==n?void 0:n.sort_by)||(null==t?void 0:t.interval)!==(null==n?void 0:n.interval)}}),getPostsSearch:e.query({query:e=>{let{start:t,limit:n,deck_id:r,search:u,sort_by:a,interval:o,nsfw:i,user_id:c,user_handle:d,exclude_active_contest:l,is_saved:s}=e,y=new URLSearchParams;return t&&y.append("start",t.toString()),n&&y.append("limit",n.toString()),r&&y.append("deck_id",r),i&&y.append("nsfw",i.toString()),u&&y.append("search",u),a&&y.append("sort_by",a),o&&y.append("interval",o),c&&y.append("user_id",c),d&&y.append("user_handle",d),s&&y.append("is_saved",s.toString()),l&&y.append("exclude_active_contest",l.toString()),{url:"/posts/search?".concat(y)}},transformResponse:(e,t,n)=>({...e,start:n.start||0}),merge:(e,t,n)=>{var r;let{arg:u}=n;return null!==(r=u.start)&&void 0!==r&&r?{...e,...t,memes:[...e.memes||[],...t.memes]}:t},serializeQueryArgs:e=>{let{queryArgs:t}=e,{deck_id:n,user_handle:r,search:u}=t;return u?{search:u}:n?{deck_id:n}:{user_handle:r}},forceRefetch(e){let{currentArg:t,previousArg:n}=e;return(null==t?void 0:t.start)!==(null==n?void 0:n.start)||(null==t?void 0:t.limit)!==(null==n?void 0:n.limit)||(null==t?void 0:t.search)!==(null==n?void 0:n.search)||(null==t?void 0:t.sort_by)!==(null==n?void 0:n.sort_by)||(null==t?void 0:t.interval)!==(null==n?void 0:n.interval)}}),getPost:e.query({query:e=>"/posts/".concat((0,i.eC)(e))}),createPost:e.mutation({query:e=>({url:"/posts",method:"POST",body:e})}),deletePost:e.mutation({query:e=>{let{postId:t}=e;return{url:"/posts/".concat((0,i.eC)(t)),method:"DELETE"}},async onCacheEntryAdded(e,t){let{postId:n,deckPageId:r,profilePageHandle:u}=e,{dispatch:a}=t;["feed",...r&&"feed"!==r?[r]:[]].forEach(e=>{a(c.util.updateQueryData("getPosts",{deck_id:e},e=>{if(!e)return;let t=e.findIndex(e=>e.id===n);-1!==t&&e.splice(t,1)}))});let o={};r?o={deck_id:(0,i.eC)(r)}:u&&(o={user_handle:(0,i.eC)(u)}),a(c.util.updateQueryData("getPostsSearch",o,e=>{if(!e)return;let t=e.memes.findIndex(e=>e.id===n);-1!==t&&e.memes.splice(t,1)}))}}),postVote:e.mutation({query:e=>{let{postId:t,vote:n}=e;return{url:"/posts/".concat((0,i.eC)(t),"/votes"),method:"POST",body:{vote:n}}},onQueryStarted:async(e,t)=>{let{postId:n,user:r,vote:u,deckPageId:a,profilePageHandle:o}=e,{dispatch:d,queryFulfilled:l}=t,s={id:"VOTE_ON:".concat(r.id),by:r.id,react:u?"upvote":"downvote"};function y(e){return{up:u?[...e.votes.up,s]:e.votes.up.filter(e=>e.by!==r.id),down:u?e.votes.down.filter(e=>e.by!==r.id):[...e.votes.down,s]}}let m=["feed",...a&&"feed"!==a?[a]:[]].map(e=>c.util.updateQueryData("getPosts",{deck_id:e},e=>{if(!e)return;let t=e.findIndex(e=>e.id===n);if(-1===t)return;let r=y(e[t]);e[t].votes=r})),p={};a?p={deck_id:(0,i.eC)(a)}:o&&(p={user_handle:(0,i.eC)(o)});let f=c.util.updateQueryData("getPostsSearch",p,e=>{if(!e)return;let t=e.memes.findIndex(e=>e.id===n);if(-1===t)return;let r=y(e.memes[t]);e.memes[t].votes=r}),g=c.util.updateQueryData("getPost",(0,i.eC)(n),e=>{if(!e)return;let t=y(e);e.votes=t}),h=m.map(e=>d(e)),v=d(f),C=d(g);try{await l}catch(e){h.forEach(e=>e.undo()),v.undo(),C.undo()}}}),deleteVote:e.mutation({query:e=>{let{postId:t}=e;return{url:"/posts/".concat((0,i.eC)(t),"/votes"),method:"DELETE"}},async onQueryStarted(e,t){let{postId:n,user:r,deckPageId:u,profilePageHandle:a}=e,{dispatch:o,queryFulfilled:d}=t;function l(e){return{up:e.votes.up.filter(e=>e.by!==r.id),down:e.votes.down.filter(e=>e.by!==r.id)}}let s=["feed",...u&&"feed"!==u?[u]:[]].map(e=>c.util.updateQueryData("getPosts",{deck_id:e},e=>{if(!e)return;let t=e.findIndex(e=>e.id===n);if(-1===t)return;let r=l(e[t]);e[t].votes=r})),y={};u?y={deck_id:(0,i.eC)(u)}:a&&(y={user_handle:(0,i.eC)(a)});let m=c.util.updateQueryData("getPostsSearch",y,e=>{if(!e)return;let t=e.memes.findIndex(e=>e.id===n);if(-1===t)return;let r=l(e.memes[t]);e.memes[t].votes=r}),p=c.util.updateQueryData("getPost",(0,i.eC)(n),e=>{if(!e)return;let t=l(e);e.votes=t}),f=s.map(e=>o(e)),g=o(m),h=o(p);try{await d}catch(e){f.forEach(e=>e.undo()),g.undo(),h.undo()}}}),updateIsNsfw:e.mutation({query:e=>{let{postId:t,is_nsfw:n}=e;return{url:"/posts/".concat((0,i.eC)(t),"/nsfw"),method:"POST",body:{is_nsfw:n}}}}),getDeck:e.query({query:e=>"/decks/".concat((0,i.eC)(e)),async onQueryStarted(e,t){let{dispatch:n,queryFulfilled:r}=t,u=n(c.util.updateQueryData("getDecksNewPosts",void 0,t=>{let n="deck:".concat(e);t[n]&&(t[n]=0)}));try{await r}catch(e){u.undo()}}}),getDecks:e.query({query:e=>{let{start:t,interval:n,limit:r,user_handle:u,meme_id:a,image_id:o}=e,i=new URLSearchParams;return t&&i.append("start",t.toString()),n&&i.append("interval",n.toString()),r&&i.append("limit",r.toString()),a&&i.append("meme_id",a),o&&i.append("image_id",o),u&&i.append("user_handle",u.toLowerCase()),"/decks?".concat(i)},serializeQueryArgs:e=>{let{queryArgs:t}=e,{start:n,limit:r,...u}=t;return u}}),createDeck:e.mutation({query:e=>({url:"/decks",method:"POST",body:e}),async onCacheEntryAdded(e,t){let{dispatch:n,cacheDataLoaded:r}=t,{data:u}=await r;u&&(n(c.util.updateQueryData("getDeck",(0,i.eC)(u.id),e=>{Object.assign(e,u)})),n(c.util.updateQueryData("getMe",void 0,e=>{e.decks&&(e.decks={...e.decks,[u.id]:u})})))}}),updateDeck:e.mutation({query:e=>{let{id:t,...n}=e;return{url:"/decks/".concat((0,i.eC)(t)),method:"PUT",body:n}},async onQueryStarted(e,t){let{id:n,...r}=e,{dispatch:u,queryFulfilled:a}=t,o="deck:"+(0,i.eC)(n),d=u(c.util.updateQueryData("getDeck",(0,i.eC)(n),e=>{Object.assign(e,r)})),l=u(c.util.updateQueryData("getMe",void 0,e=>{var t;let n=Object.values(null!==(t=e.decks)&&void 0!==t?t:{}).find(e=>e.id===o);if(!n)return;let u={...n,...r};e.decks&&(e.decks={...e.decks,[o]:u})}));try{await a}catch(e){d.undo(),l.undo()}}}),deleteDeck:e.mutation({query:e=>({url:"/decks/".concat((0,i.eC)(e)),method:"DELETE"}),async onQueryStarted(e,t){let{dispatch:n,queryFulfilled:r}=t,u=c.util.updateQueryData("getMe",void 0,t=>{t.decks&&delete t.decks[e]}),a=c.util.upsertQueryData("getDeck",(0,i.eC)(e),void 0),o=n(u);n(a);try{await r,n(c.util.invalidateTags([{type:"Deck",id:(0,i.eC)(e)}]))}catch(e){o.undo()}}}),followDeck:e.mutation({query:e=>({url:"/decks/".concat((0,i.eC)(e),"/follow"),method:"POST"}),async onQueryStarted(e,t){let{dispatch:n,queryFulfilled:r}=t,u=c.util.updateQueryData("getTopDecks",{interval:a.u.Week,limit:4},t=>{let n=Object.values(null!=t?t:{}).find(t=>t.id===e);n&&Object.assign(t,{[e]:{...n,is_following:!0}})}),o=c.util.updateQueryData("getDeck",(0,i.eC)(e),e=>{Object.assign(e,{is_following:!0})}),d=c.util.updateQueryData("getDecks",{start:0,limit:20,interval:a.u.Month},t=>{let n=t.find(t=>t.id===e);if(!n)return;let r={...n,is_following:!0},u=t.findIndex(t=>t.id===e);t[u]=r}),l=n(u),s=n(o),y=n(d);try{await r}catch(e){l.undo(),s.undo(),y.undo()}},async onCacheEntryAdded(e,t){let{dispatch:n,cacheDataLoaded:r}=t,{data:u}=await r;u&&n(c.util.updateQueryData("getMe",void 0,t=>{t.decks&&(t.decks={...t.decks,[e]:u})}))}}),unfollowDeck:e.mutation({query:e=>({url:"/decks/".concat((0,i.eC)(e),"/follow"),method:"DELETE"}),async onQueryStarted(e,t){let{dispatch:n,queryFulfilled:r}=t,u=c.util.updateQueryData("getMe",void 0,t=>{var n;let r=Object.values(null!==(n=t.decks)&&void 0!==n?n:{}).find(t=>t.id===e);if(!r)return;let u={...r,is_following:!1};Object.assign(t,{decks:{...t.decks,[e]:u}})}),o=c.util.updateQueryData("getTopDecks",{interval:a.u.Week,limit:4},t=>{let n=Object.values(null!=t?t:{}).find(t=>t.id===e);n&&Object.assign(t,{[e]:{...n,is_following:!1}})}),d=c.util.updateQueryData("getDeck",(0,i.eC)(e),e=>{Object.assign(e,{is_following:!1})}),l=n(u),s=n(o),y=n(d);try{await r}catch(e){l.undo(),s.undo(),y.undo()}}}),submitPostToDeck:e.mutation({query:e=>{let{deck_id:t,...n}=e;return{url:"/decks/".concat((0,i.eC)(t),"/submit"),method:"POST",body:n}}}),getDecksNewPosts:e.query({query:()=>"/decks/following/new-posts"}),getTopDecks:e.query({query:e=>{let{interval:t,limit:n,category:r}=e,u=new URLSearchParams;return t&&u.append("interval",t.toString()),n&&u.append("limit",n.toString()),r&&u.append("category",r),{url:"/decks/top?".concat(u)}}}),getContests:e.query({query:e=>{let t=new URLSearchParams;return e&&t.append("deck_id",e),"/contests?".concat(t)}}),getContest:e.query({query:e=>"/contests/".concat((0,i.eC)(e))}),getContestEntries:e.query({query:e=>"/contests/".concat((0,i.eC)(e),"/entries")}),getContestEntry:e.query({query:e=>{let{contestId:t,entryId:n}=e;return"/contests/".concat((0,i.eC)(t),"/entries/").concat((0,i.eC)(n))}}),createContest:e.mutation({query:e=>({url:"/contests",method:"POST",body:e})}),updateContest:e.mutation({query:e=>{let{id:t,...n}=e;return{url:"/contests/".concat((0,i.eC)(t)),method:"PUT",body:n}},async onCacheEntryAdded(e,t){let{id:n,...r}=e,{dispatch:u,cacheDataLoaded:a}=t,{data:o}=await a;if(!o)return;let d="contest:"+(0,i.eC)(n);u(c.util.updateQueryData("getContests",(0,i.eC)(o.deck_id),e=>{let t=e.findIndex(e=>e.id===d);-1===t?Object.assign(e,[...e,o]):e[t]=o}))}}),deleteContest:e.mutation({query:e=>{let{contest_id:t,refund_address:n}=e;return{url:"/contests/".concat((0,i.eC)(t)),method:"DELETE",body:{refund_address:n}}},async onCacheEntryAdded(e,t){let{contest_id:n}=e,{dispatch:r,cacheDataLoaded:u}=t,{data:a}=await u;if(!a)return;let o="contest:"+(0,i.eC)(n);r(c.util.updateQueryData("getContests",(0,i.eC)(a.deck_id),e=>{let t=e.findIndex(e=>e.id===o);-1!==t&&e.splice(t,1)}))}}),submitContestEntry:e.mutation({query:e=>{let{contestId:t,memeId:n}=e;return{url:"/contests/".concat((0,i.eC)(t),"/entries"),method:"POST",body:{meme_id:n}}}}),deleteContestEntry:e.mutation({query:e=>{let{contestId:t,entryId:n}=e;return{url:"/contests/".concat((0,i.eC)(t),"/entries/").concat((0,i.eC)(n)),method:"DELETE"}}}),voteOnContestEntry:e.mutation({query:e=>{let{contestId:t,entryId:n,upvote:r}=e;return{url:"/contests/".concat((0,i.eC)(t),"/entries/").concat((0,i.eC)(n),"/vote"),method:"POST",body:{upvote:r}}},async onQueryStarted(e,t){let{contestId:n,entryId:r,upvote:u,user:a}=e,{dispatch:o,queryFulfilled:d}=t,l={id:"VOTE_ON:".concat(a.id),by:a.id,react:u?"upvote":"downvote"},s=o(c.util.updateQueryData("getContestEntry",{contestId:(0,i.eC)(n),entryId:(0,i.eC)(r)},e=>{if(!e)return;let t={up:u?[...e.votes.up,l]:e.votes.up.filter(e=>e.by!==a.id),down:u?e.votes.down.filter(e=>e.by!==a.id):[...e.votes.down,l]};e.votes=t}));try{await d}catch(e){s.undo()}}}),removeVoteOnContestEntry:e.mutation({query:e=>{let{contestId:t,entryId:n}=e;return{url:"/contests/".concat((0,i.eC)(t),"/entries/").concat((0,i.eC)(n),"/vote"),method:"DELETE"}},async onQueryStarted(e,t){let{contestId:n,entryId:r,user:u}=e,{dispatch:a,queryFulfilled:o}=t,d=a(c.util.updateQueryData("getContestEntry",{contestId:(0,i.eC)(n),entryId:(0,i.eC)(r)},e=>{if(!e)return;let t={up:e.votes.up.filter(e=>e.by!==u.id),down:e.votes.down.filter(e=>e.by!==u.id)};e.votes=t}));try{await o}catch(e){d.undo()}}}),setContestPayoutAddress:e.mutation({query:e=>{let{contestId:t,payoutAddress:n}=e;return{url:"/contests/".concat((0,i.eC)(t),"/set-payout-address/").concat(n),method:"POST",body:{payout_address:n}}}}),getMemeBattle:e.query({query:e=>"/contests/battle/".concat(e)}),getNotifications:e.query({query:()=>"/notifications"}),markNotificationAsRead:e.mutation({query:e=>({url:"/notifications/".concat(e,"/read"),method:"PUT"}),async onQueryStarted(e,t){let{dispatch:n,queryFulfilled:r}=t,{data:u}=await r;u&&n(c.util.updateQueryData("getNotifications",void 0,t=>{let n=t.findIndex(t=>t.id===e);-1!==n&&(t[n].is_read=!0)}))}}),markAllNotificationsAsRead:e.mutation({query:()=>({url:"/notifications/read",method:"PUT"}),async onQueryStarted(e,t){let{dispatch:n,queryFulfilled:r}=t,u=c.util.updateQueryData("getNotifications",void 0,e=>{e.forEach(e=>{e.is_read=!0})}),a=c.util.updateQueryData("getMe",void 0,e=>{e.notifications&&(e.notifications=e.notifications.map(e=>(e.is_read=!0,e)))});n(u),n(a)}}),getAnalytics:e.query({query:()=>"/analytics"}),getAnalyticsUserBar:e.query({query:e=>{let t=new URLSearchParams;return t.append("time_interval",e),"/analytics/users_bar_chart?".concat(t)}})})}),{useLogoutMutation:d,useGetMeQuery:l,useLazyRefreshProfileQuery:s,useGetProfileQuery:y,useLazyGetProfileQuery:m,useGetMyProfileMemesQuery:p,useLazyGetMyProfileMemesQuery:f,useGetProfileMemesQuery:g,useLazyGetProfileMemesQuery:h,useGetLibraryMemesQuery:v,useLazyGetLibraryMemesQuery:C,useSearchUserQuery:k,useGetTopPostersQuery:q,useGetProductUpdatesQuery:D,useDismissProductUpdateMutation:w,useDeleteImageMutation:_,useGetMemeQuery:P,useLazyGetMemeQuery:S,usePostMemeMutation:T,usePostMemePanelMutation:E,useUpdateMemeMutation:Q,usePublishMemeMutation:b,useUpdateMemePanelMutation:M,usePostMemeTextOverlayMutation:O,useFaceswapUploadMutation:L,useFaceswapDeleteMutation:I,useDeleteMemeMutation:A,useGetPostsQuery:U,useLazyGetPostsQuery:x,useGetPostsSearchQuery:R,useGetPostQuery:j,useLazyGetPostQuery:N,useCreatePostMutation:z,useDeletePostMutation:B,usePostVoteMutation:X,useDeleteVoteMutation:V,useGetDeckQuery:W,useLazyGetDeckQuery:J,useCreateDeckMutation:F,useGetDecksQuery:G,useLazyGetDecksQuery:K,useUpdateDeckMutation:Y,useDeleteDeckMutation:H,useFollowDeckMutation:Z,useUnfollowDeckMutation:$,useSubmitPostToDeckMutation:ee,useGetDecksNewPostsQuery:et,useGetTopDecksQuery:en,useGetContestsQuery:er,useLazyGetContestsQuery:eu,useGetContestQuery:ea,useLazyGetContestQuery:eo,useGetContestEntriesQuery:ei,useGetContestEntryQuery:ec,useCreateContestMutation:ed,useUpdateContestMutation:el,useDeleteContestMutation:es,useSubmitContestEntryMutation:ey,useDeleteContestEntryMutation:em,useVoteOnContestEntryMutation:ep,useRemoveVoteOnContestEntryMutation:ef,useSetContestPayoutAddressMutation:eg,usePostImageMutation:eh,useGetImageQuery:ev,useLazyGetImageQuery:eC,useGetMemeBattleQuery:ek,useGetNotificationsQuery:eq,useMarkNotificationAsReadMutation:eD,useMarkAllNotificationsAsReadMutation:ew,useGetAnalyticsQuery:e_,useGetAnalyticsUserBarQuery:eP}=c},72363:function(e,t,n){var r,u,a,o;n.d(t,{a:function(){return u},u:function(){return r}}),(a=r||(r={})).Today="today",a.Week="week",a.Month="month",a.Year="year",a.AllTime="all-time",(o=u||(u={})).Hot="hot",o.Recent="recent",o.Contest="contest",o.Top="top"},71987:function(e,t,n){n.d(t,{BB:function(){return u},Dt:function(){return c},L:function(){return s},bR:function(){return d},bd:function(){return l},cd:function(){return y},cm:function(){return a},j7:function(){return o}});var r=n(28070);let u="true"===r.env.NEXT_PUBLIC_IS_PROD,a="true"===r.env.NEXT_PUBLIC_IS_STAGING,o=!0,i="0.0.0.0";function c(){return/Android/i.test(navigator.userAgent)}function d(){return o?window.location.origin+"/memedeck:memedeck:meme-deck.os":u?"https://api.memedeck.xyz":a?"https://staging-api.memedeck.xyz":"http://".concat("0.0.0.0",":8080")}function l(){return o?window.location.origin+"/memedeck:memedeck:meme-deck.os/home":u?"https://memedeck.xyz/home":a?"https://staging.memedeck.xyz/home":"http://".concat(i,":3000/home")}function s(){return u?"https://memedeck.xyz":a?"https://staging.memedeck.xyz":"http://".concat(i,":3000")}let y=u?"https://solana-mainnet.g.alchemy.com/v2/".concat("kf4k_-v5nRoxMQ-uH_vytuD26XLDDWs-"):"https://solana-devnet.g.alchemy.com/v2/".concat("t_L8mlrM7LeHxy0ftdsxTLKkIpCSFqkL")},25845:function(e,t,n){n.d(t,{Df:function(){return a},Po:function(){return u},RL:function(){return o},_6:function(){return i},eC:function(){return d},qr:function(){return c}});var r=n(72363);let u=e=>{let t=Math.round((new Date().getTime()-e.getTime())/1e3),n=Math.round(t/60),r=Math.round(n/60);return t<60?"".concat(t,"s ago"):n<60?"".concat(n,"m ago"):r<24?"".concat(r,"h ago"):e.toLocaleDateString("en-US",{year:"numeric",month:"short",day:"numeric"})},a=e=>e.replace(/[^a-z0-9]/gi,"_").toLowerCase(),o="image/*,.jpg_large,.png_large,.jpeg_large,.jpg_small,.png_small,.jpeg_small";function i(e,t,n){return 1===e?t:n}function c(e){switch(e){case r.u.Today:return"Today";case r.u.Week:return"This Week";case r.u.Month:return"This Month";case r.u.Year:return"This Year";case r.u.AllTime:return"of All Time"}}function d(e){return e.replace("image:","").replace("meme:","").replace("post:","").replace("deck:","").replace("contest:","").replace("entry:","")}}}]);